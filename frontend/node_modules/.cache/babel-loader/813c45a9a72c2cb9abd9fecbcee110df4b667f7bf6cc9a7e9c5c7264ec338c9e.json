{"ast":null,"code":"import _objectSpread from\"/var/www/iptv-manager/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useState,useEffect}from'react';import{authAPI,userAPI}from'../utils/api';import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Load user from localStorage on initial render\nuseEffect(()=>{const loadUser=()=>{try{const userInfo=localStorage.getItem('userInfo');if(userInfo){const parsedUser=JSON.parse(userInfo);setUser(parsedUser);}}catch(error){console.error('Error loading user from localStorage:',error);}finally{setLoading(false);}};loadUser();},[]);// Login user\nconst login=async(email,password)=>{try{setLoading(true);setError(null);const{data}=await authAPI.login(email,password);if(data.success){localStorage.setItem('userInfo',JSON.stringify(data.data));setUser(data.data);}setLoading(false);return data;}catch(error){setLoading(false);setError(error.response&&error.response.data.message?error.response.data.message:'Login failed');throw error;}};// Register user\nconst register=async(username,email,password)=>{try{setLoading(true);setError(null);const{data}=await authAPI.register(username,email,password);if(data.success){localStorage.setItem('userInfo',JSON.stringify(data.data));setUser(data.data);}setLoading(false);return data;}catch(error){setLoading(false);setError(error.response&&error.response.data.message?error.response.data.message:'Registration failed');throw error;}};// Create admin user\nconst createAdmin=async(username,email,password,secretKey)=>{try{setLoading(true);setError(null);const{data}=await authAPI.createAdmin(username,email,password,secretKey);if(data.success){localStorage.setItem('userInfo',JSON.stringify(data.data));setUser(data.data);}setLoading(false);return data;}catch(error){setLoading(false);setError(error.response&&error.response.data.message?error.response.data.message:'Admin creation failed');throw error;}};// Logout user\nconst logout=()=>{localStorage.removeItem('userInfo');setUser(null);};// Update user profile\nconst updateProfile=async preferences=>{try{setLoading(true);setError(null);const{data}=await userAPI.updatePreferences(preferences);if(data.success&&user){const updatedUser=_objectSpread(_objectSpread({},user),{},{preferences:data.data});localStorage.setItem('userInfo',JSON.stringify(updatedUser));setUser(updatedUser);}setLoading(false);return data;}catch(error){setLoading(false);setError(error.response&&error.response.data.message?error.response.data.message:'Error updating profile');throw error;}};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,loading,error,login,register,createAdmin,logout,updateProfile,isAuthenticated:!!user,isAdmin:user&&user.role==='admin'},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","authAPI","userAPI","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","loading","setLoading","error","setError","loadUser","userInfo","localStorage","getItem","parsedUser","JSON","parse","console","login","email","password","data","success","setItem","stringify","response","message","register","username","createAdmin","secretKey","logout","removeItem","updateProfile","preferences","updatePreferences","updatedUser","_objectSpread","Provider","value","isAuthenticated","isAdmin","role"],"sources":["/var/www/iptv-manager/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { authAPI, userAPI } from '../utils/api';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Load user from localStorage on initial render\r\n  useEffect(() => {\r\n    const loadUser = () => {\r\n      try {\r\n        const userInfo = localStorage.getItem('userInfo');\r\n        if (userInfo) {\r\n          const parsedUser = JSON.parse(userInfo);\r\n          setUser(parsedUser);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading user from localStorage:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadUser();\r\n  }, []);\r\n  \r\n  // Login user\r\n  const login = async (email, password) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const { data } = await authAPI.login(email, password);\r\n      \r\n      if (data.success) {\r\n        localStorage.setItem('userInfo', JSON.stringify(data.data));\r\n        setUser(data.data);\r\n      }\r\n      \r\n      setLoading(false);\r\n      return data;\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setError(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : 'Login failed'\r\n      );\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  // Register user\r\n  const register = async (username, email, password) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const { data } = await authAPI.register(username, email, password);\r\n      \r\n      if (data.success) {\r\n        localStorage.setItem('userInfo', JSON.stringify(data.data));\r\n        setUser(data.data);\r\n      }\r\n      \r\n      setLoading(false);\r\n      return data;\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setError(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : 'Registration failed'\r\n      );\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  // Create admin user\r\n  const createAdmin = async (username, email, password, secretKey) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const { data } = await authAPI.createAdmin(username, email, password, secretKey);\r\n      \r\n      if (data.success) {\r\n        localStorage.setItem('userInfo', JSON.stringify(data.data));\r\n        setUser(data.data);\r\n      }\r\n      \r\n      setLoading(false);\r\n      return data;\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setError(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : 'Admin creation failed'\r\n      );\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  // Logout user\r\n  const logout = () => {\r\n    localStorage.removeItem('userInfo');\r\n    setUser(null);\r\n  };\r\n  \r\n  // Update user profile\r\n  const updateProfile = async (preferences) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const { data } = await userAPI.updatePreferences(preferences);\r\n      \r\n      if (data.success && user) {\r\n        const updatedUser = { ...user, preferences: data.data };\r\n        localStorage.setItem('userInfo', JSON.stringify(updatedUser));\r\n        setUser(updatedUser);\r\n      }\r\n      \r\n      setLoading(false);\r\n      return data;\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setError(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : 'Error updating profile'\r\n      );\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        loading,\r\n        error,\r\n        login,\r\n        register,\r\n        createAdmin,\r\n        logout,\r\n        updateProfile,\r\n        isAuthenticated: !!user,\r\n       isAdmin: user && user.role === 'admin'\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}