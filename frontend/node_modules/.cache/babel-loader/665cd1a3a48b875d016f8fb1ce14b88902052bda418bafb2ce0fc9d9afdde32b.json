{"ast":null,"code":"import _objectSpread from\"/var/www/iptv-manager/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useState,useContext,useEffect}from'react';import{userAPI}from'../utils/api';import{AuthContext}from'./AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";export const UserProfileContext=/*#__PURE__*/createContext();export const UserProfileProvider=_ref=>{let{children}=_ref;const[userProfile,setUserProfile]=useState(null);const[favorites,setFavorites]=useState([]);const[watchHistory,setWatchHistory]=useState([]);const[preferences,setPreferences]=useState({defaultCategory:'All',defaultLanguage:'All',showOnlyLive:false,resultsPerPage:10,theme:'system'});const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const{user}=useContext(AuthContext);// Load user profile when user changes\nuseEffect(()=>{if(user){loadUserProfile();}else{setUserProfile(null);setFavorites([]);setWatchHistory([]);setPreferences({defaultCategory:'All',defaultLanguage:'All',showOnlyLive:false,resultsPerPage:10,theme:'system'});}},[user]);// Load user profile\nconst loadUserProfile=async()=>{if(!user)return;try{setLoading(true);setError(null);const{data}=await userAPI.getProfile();if(data.success){setUserProfile(data.data);setFavorites(data.data.favorites||[]);setWatchHistory(data.data.watchHistory||[]);setPreferences(data.data.preferences||{defaultCategory:'All',defaultLanguage:'All',showOnlyLive:false,resultsPerPage:10,theme:'system'});}setLoading(false);}catch(error){setLoading(false);setError(error.response&&error.response.data.message?error.response.data.message:'Error loading user profile');console.error('Error loading user profile:',error);}};// Update preferences\nconst updatePreferences=async newPreferences=>{if(!user)return;try{setLoading(true);setError(null);const{data}=await userAPI.updatePreferences(newPreferences);if(data.success){setPreferences(data.data);}setLoading(false);return data;}catch(error){setLoading(false);setError(error.response&&error.response.data.message?error.response.data.message:'Error updating preferences');throw error;}};// Add to favorites\nconst addToFavorites=async channelId=>{if(!user)return;try{setLoading(true);setError(null);const{data}=await userAPI.addFavorite(channelId);if(data.success){await loadUserProfile();// Reload profile to get updated favorites\n}setLoading(false);return data;}catch(error){setLoading(false);setError(error.response&&error.response.data.message?error.response.data.message:'Error adding to favorites');throw error;}};// Remove from favorites\nconst removeFromFavorites=async channelId=>{if(!user)return;try{setLoading(true);setError(null);const{data}=await userAPI.removeFavorite(channelId);if(data.success){setFavorites(favorites.filter(fav=>fav.channel._id!==channelId));}setLoading(false);return data;}catch(error){setLoading(false);setError(error.response&&error.response.data.message?error.response.data.message:'Error removing from favorites');throw error;}};// Check if channel is in favorites\nconst isInFavorites=channelId=>{return favorites.some(fav=>fav.channel._id===channelId);};// Add to watch history\nconst addToWatchHistory=async function(channelId){let duration=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;if(!user)return;try{await userAPI.addToWatchHistory(channelId,duration);// No need to reload the entire profile, just update the local state\nconst now=new Date();// Check if already in recent history\nconst existingIndex=watchHistory.findIndex(item=>item.channel._id===channelId);if(existingIndex!==-1){// Update existing entry\nconst updatedHistory=[...watchHistory];updatedHistory[existingIndex]=_objectSpread(_objectSpread({},updatedHistory[existingIndex]),{},{watchedAt:now,duration:(updatedHistory[existingIndex].duration||0)+duration});setWatchHistory(updatedHistory);}else{// Add new entry (we don't have the channel object, so we'll reload the profile)\nawait loadUserProfile();}}catch(error){console.error('Error adding to watch history:',error);}};// Clear watch history\nconst clearWatchHistory=async()=>{if(!user)return;try{setLoading(true);setError(null);const{data}=await userAPI.clearWatchHistory();if(data.success){setWatchHistory([]);}setLoading(false);return data;}catch(error){setLoading(false);setError(error.response&&error.response.data.message?error.response.data.message:'Error clearing watch history');throw error;}};// Apply theme from preferences\nuseEffect(()=>{if(preferences){const{theme}=preferences;if(theme==='dark'){document.documentElement.setAttribute('data-bs-theme','dark');}else if(theme==='light'){document.documentElement.setAttribute('data-bs-theme','light');}else{// System theme\nconst prefersDark=window.matchMedia('(prefers-color-scheme: dark)').matches;document.documentElement.setAttribute('data-bs-theme',prefersDark?'dark':'light');}}},[preferences]);return/*#__PURE__*/_jsx(UserProfileContext.Provider,{value:{userProfile,favorites,watchHistory,preferences,loading,error,loadUserProfile,updatePreferences,addToFavorites,removeFromFavorites,isInFavorites,addToWatchHistory,clearWatchHistory},children:children});};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","userAPI","AuthContext","jsx","_jsx","UserProfileContext","UserProfileProvider","_ref","children","userProfile","setUserProfile","favorites","setFavorites","watchHistory","setWatchHistory","preferences","setPreferences","defaultCategory","defaultLanguage","showOnlyLive","resultsPerPage","theme","loading","setLoading","error","setError","user","loadUserProfile","data","getProfile","success","response","message","console","updatePreferences","newPreferences","addToFavorites","channelId","addFavorite","removeFromFavorites","removeFavorite","filter","fav","channel","_id","isInFavorites","some","addToWatchHistory","duration","arguments","length","undefined","now","Date","existingIndex","findIndex","item","updatedHistory","_objectSpread","watchedAt","clearWatchHistory","document","documentElement","setAttribute","prefersDark","window","matchMedia","matches","Provider","value"],"sources":["/var/www/iptv-manager/frontend/src/context/UserProfileContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { userAPI } from '../utils/api';\r\nimport { AuthContext } from './AuthContext';\r\n\r\nexport const UserProfileContext = createContext();\r\n\r\nexport const UserProfileProvider = ({ children }) => {\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  const [favorites, setFavorites] = useState([]);\r\n  const [watchHistory, setWatchHistory] = useState([]);\r\n  const [preferences, setPreferences] = useState({\r\n    defaultCategory: 'All',\r\n    defaultLanguage: 'All',\r\n    showOnlyLive: false,\r\n    resultsPerPage: 10,\r\n    theme: 'system'\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  \r\n  const { user } = useContext(AuthContext);\r\n\r\n  // Load user profile when user changes\r\n  useEffect(() => {\r\n    if (user) {\r\n      loadUserProfile();\r\n    } else {\r\n      setUserProfile(null);\r\n      setFavorites([]);\r\n      setWatchHistory([]);\r\n      setPreferences({\r\n        defaultCategory: 'All',\r\n        defaultLanguage: 'All',\r\n        showOnlyLive: false,\r\n        resultsPerPage: 10,\r\n        theme: 'system'\r\n      });\r\n    }\r\n  }, [user]);\r\n\r\n  // Load user profile\r\n  const loadUserProfile = async () => {\r\n    if (!user) return;\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const { data } = await userAPI.getProfile();\r\n      \r\n      if (data.success) {\r\n        setUserProfile(data.data);\r\n        setFavorites(data.data.favorites || []);\r\n        setWatchHistory(data.data.watchHistory || []);\r\n        setPreferences(data.data.preferences || {\r\n          defaultCategory: 'All',\r\n          defaultLanguage: 'All',\r\n          showOnlyLive: false,\r\n          resultsPerPage: 10,\r\n          theme: 'system'\r\n        });\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setError(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : 'Error loading user profile'\r\n      );\r\n      console.error('Error loading user profile:', error);\r\n    }\r\n  };\r\n\r\n  // Update preferences\r\n  const updatePreferences = async (newPreferences) => {\r\n    if (!user) return;\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const { data } = await userAPI.updatePreferences(newPreferences);\r\n      \r\n      if (data.success) {\r\n        setPreferences(data.data);\r\n      }\r\n      \r\n      setLoading(false);\r\n      return data;\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setError(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : 'Error updating preferences'\r\n      );\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Add to favorites\r\n  const addToFavorites = async (channelId) => {\r\n    if (!user) return;\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const { data } = await userAPI.addFavorite(channelId);\r\n      \r\n      if (data.success) {\r\n        await loadUserProfile(); // Reload profile to get updated favorites\r\n      }\r\n      \r\n      setLoading(false);\r\n      return data;\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setError(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : 'Error adding to favorites'\r\n      );\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Remove from favorites\r\n  const removeFromFavorites = async (channelId) => {\r\n    if (!user) return;\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const { data } = await userAPI.removeFavorite(channelId);\r\n      \r\n      if (data.success) {\r\n        setFavorites(favorites.filter(fav => fav.channel._id !== channelId));\r\n      }\r\n      \r\n      setLoading(false);\r\n      return data;\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setError(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : 'Error removing from favorites'\r\n      );\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Check if channel is in favorites\r\n  const isInFavorites = (channelId) => {\r\n    return favorites.some(fav => fav.channel._id === channelId);\r\n  };\r\n\r\n  // Add to watch history\r\n  const addToWatchHistory = async (channelId, duration = 0) => {\r\n    if (!user) return;\r\n    \r\n    try {\r\n      await userAPI.addToWatchHistory(channelId, duration);\r\n      \r\n      // No need to reload the entire profile, just update the local state\r\n      const now = new Date();\r\n      \r\n      // Check if already in recent history\r\n      const existingIndex = watchHistory.findIndex(\r\n        item => item.channel._id === channelId\r\n      );\r\n      \r\n      if (existingIndex !== -1) {\r\n        // Update existing entry\r\n        const updatedHistory = [...watchHistory];\r\n        updatedHistory[existingIndex] = {\r\n          ...updatedHistory[existingIndex],\r\n          watchedAt: now,\r\n          duration: (updatedHistory[existingIndex].duration || 0) + duration\r\n        };\r\n        setWatchHistory(updatedHistory);\r\n      } else {\r\n        // Add new entry (we don't have the channel object, so we'll reload the profile)\r\n        await loadUserProfile();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding to watch history:', error);\r\n    }\r\n  };\r\n\r\n  // Clear watch history\r\n  const clearWatchHistory = async () => {\r\n    if (!user) return;\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const { data } = await userAPI.clearWatchHistory();\r\n      \r\n      if (data.success) {\r\n        setWatchHistory([]);\r\n      }\r\n      \r\n      setLoading(false);\r\n      return data;\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setError(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : 'Error clearing watch history'\r\n      );\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Apply theme from preferences\r\n  useEffect(() => {\r\n    if (preferences) {\r\n      const { theme } = preferences;\r\n      \r\n      if (theme === 'dark') {\r\n        document.documentElement.setAttribute('data-bs-theme', 'dark');\r\n      } else if (theme === 'light') {\r\n        document.documentElement.setAttribute('data-bs-theme', 'light');\r\n      } else {\r\n        // System theme\r\n        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n        document.documentElement.setAttribute('data-bs-theme', prefersDark ? 'dark' : 'light');\r\n      }\r\n    }\r\n  }, [preferences]);\r\n\r\n  return (\r\n    <UserProfileContext.Provider\r\n      value={{\r\n        userProfile,\r\n        favorites,\r\n        watchHistory,\r\n        preferences,\r\n        loading,\r\n        error,\r\n        loadUserProfile,\r\n        updatePreferences,\r\n        addToFavorites,\r\n        removeFromFavorites,\r\n        isInFavorites,\r\n        addToWatchHistory,\r\n        clearWatchHistory\r\n      }}\r\n    >\r\n      {children}\r\n    </UserProfileContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}